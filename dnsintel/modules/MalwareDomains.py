from dnsintel.lib.abstractbase import AbstractBase
from dnsintel.lib.domainintel import DomainIntel
from logzero import logger


class Module(AbstractBase):

    def __init__(self):
        super().__init__()

    def transform(self, path: str):
        try:
            with open(path, "r") as file:
                for count, line in enumerate(file):
                    if not line.startswith("##"):
                        line = line.replace("\r", "").replace("\n", "").replace("#", "")
                        new_line = [x for x in line.split("\t") if x != '']
                        domain = DomainIntel(new_line[0], self.FORMAT, new_line[1], new_line[2])
                        yield domain
        except IOError as e:
            logger.error(e)


    def run(self, config):
        file = self.load(config)
        if file:
            data = self.transform(file.location)
            self.extract(data)
